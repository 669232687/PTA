#include <iostream>
#include <algorithm>
#include <vector>
int a[100000], b[100000], v[100000];
using namespace std;
int main() {
    int n, max = 0, cnt = 0;
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
        b[i] = a[i];
    }
    sort(a, a + n);    //当一个数在数组排序后与排序前位置相同，认为这个数是主元 
    for (int i = 0; i < n; i++) {
        if(a[i] == b[i] && b[i] > max)
            v[cnt++] = b[i];
        if (b[i] > max)
            max = b[i];
    }
    printf("%d\n", cnt);
    for(int i = 0; i < cnt; i++) {
        if (i != 0) printf(" ");
        printf("%d", v[i]);
    }
    printf("\n");//不加这句会有一个测试点没法通过。.
    return 0;
}



#include<iostream>
#include<string>
using namespace std;
#include <vector>
int main()
{
   int a,i,max;
   cin>>a;
   int num=a;
   vector<vector <int>>number(a,vector<int>(2));
   for (i=0;i<a;i++){
      cin>>number[i][0];
      number[i][1]=0;
   }
   int min=number[a-1][0];  //定义一个二维数组，从前往后，后面的数比前面最大的数小时，这个数就不是主元，从后往前遍历一遍，前面得数比后面最小的数
                            大时这个数不是主元，将不是主元的数的number[i][1]设为1，并且num--;最后的num是主元的个数。没有主元输出一个空行。
   max=number[0][0];
   for(i=1;i<a;i++){
      if (number[i][0]>max)
         max=number[i][0];
      if (number[i][0]<max){
          number[i][1]=1;
          num--;}
   }
   for(i=a-2;i>=0;i--){
      if (number[i][0]<min)
          min=number[i][0];
      if (number[i][0]>min && number[i][1]==0){
          number[i][1]=1;
          num--;}
   }
   cout<<num<<endl;
   for(i=0;i<a;i++){
      if (number[i][1]!=1){
         cout<<number[i][0];
         break;
      }
   }
   for(i+=1;i<a;i++)
      if (number[i][1]!=1)
         cout<<' '<<number[i][0];
   printf("\n");
   system("pause");
   return 0;
}
